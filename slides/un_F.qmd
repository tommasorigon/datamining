---
title: "Additive models"
subtitle: "Data Mining - CdL CLAMSES"
author: "[Tommaso Rigon]{.orange}"
institute: "_Universit√† degli Studi di Milano-Bicocca_"
execute:
  cache: false
filters: 
  - remove-pause.lua
format:
  revealjs:
    df-print: tibble
    auto-stretch: true
    center: true
    html-math-method: katex
    transition: none
    output-file: un_F_slides.html
    slide-number: true
    callout-appearance: minimal
    code-line-numbers: true
    theme: [default, ../template.css] # alternative themes (subset): default, night, dark
    embed-resources: false
    echo: false
    fig-dpi: 200
    # incremental: true  # Remove comment if you like incremental bullet points
    logo: img/logoB.png
    footer: "[Home page](https://tommasorigon.github.io/datamining)"
    highlight-style: atom-one
  html:
    html-math-method: katex
    echo: false
    callout-appearance: minimal
    theme: [cosmo, ../template.css]
    toc: true
    toc-title: Table of contents
    embed-resources: false
    code-line-numbers: true
    smooth-scroll: true
    code-fold: false
    code-summary: "Show the code"
    fig-dpi: 200
    highlight-style: atom-one
editor: 
  markdown: 
    wrap: 72
editor_options: 
  chunk_output_type: console
---

## [Homepage](../index.html)

```{r}
#| warning: false
#| echo: false
#| include: false
#| message: false
#| purl: false

knitr::purl("un_F.qmd", output = "../code/un_F.R")
styler:::style_file("../code/un_F.R")
```

::: columns
::: {.column width="35%"}
![](img/baseball.png){width=60% fig-align="center"} 


::: {style="font-size: 90%;"}
*"I never keep a scorecard or the batting averages. I hate statistics. What I got to know, I keep in my head."* 
:::

[Dizzy Dean]{.grey}, baseball player in the '30s and '40s.

:::

::: {.column width="65%"}

-   In this unit we will cover the following [topics]{.orange}:

    - Generalized additive models (GAMs)
    - Multivariate Adaptive Regression Splines (MARS)
    
- The running example is about baseball data... but a lot has changed since the '30s!
:::
:::

## The `Hitters` dataset

::: incremental

- We consider the `Hitters` dataset, which contains information about $n = 263$ Major League [Baseball players]{.blue} from the 1986 and 1987 seasons. 

- We want to [predict]{.blue} the [Salary]{.orange} of 1987 of each player, as a function of several covariates: 
  - number of hits/runs/walks/assists/errors in 1986 and during the whole career;
  - number of years in the major leagues;
  - The league/division of the player at the end of 1986;
  - ...and many others.
  
- We considered the logarithmic transform of the salary (`logSalary`).

- There are in total $p = 19$ [variables]{.orange} that can be used to predict the salary of each player.

- The [original dataset](https://search.r-project.org/CRAN/refmans/ISLR/html/Hitters.html) is available in the `ISLR` R package.

:::

## A `glimpse` of the `Hitters` dataset

```{r}
#| message: false
rm(list = ls())
library(ISLR)
library(ggplot2)
library(ggthemes)

data(Hitters)
Hitters <- na.omit(Hitters)
dplyr::glimpse(Hitters)
```

## Preliminary operations

```{r}
# Hitters <- mutate(Hitters,
#   TotalScore = (RBI + Assists + Walks - Errors) / AtBat,
#   logAHits = log1p(CHits / Years),
#   logAAtBat = log1p(CAtBat / Years),
#   logARuns = log1p(CRuns / Years),
#   logARBI = log1p(CRBI / Years),
#   logAWalks = log1p(CWalks / Years),
#   logAHmRun = log1p(CHmRun / Years),
#   RatioHits = Hits / CHits,
#   RatioAtBat = AtBat / CAtBat,
#   RatioRuns = Runs / CRuns,
#   RatioRBI = RBI / CRBI,
#   RatioWalks = Walks / CWalks,
#   RatioHmRun = HmRun / (CHmRun + 1),
#   logYears = log(Years),
#   logSalary = log(Salary)
# ) %>% select(-c(Salary, Years))
```

```{r}
Hitters$logSalary <- log(Hitters$Salary)
Hitters <- subset(Hitters, select = -Salary)

# Data splitting
set.seed(123)
id_train <- sample(1:nrow(Hitters), size = floor(0.75 * nrow(Hitters)), replace = FALSE)
id_test <- setdiff(1:nrow(Hitters), id_train)
Hitters_train <- Hitters[id_train, ]
Hitters_test <- Hitters[id_test, ]
```

## Correlation matrix of `Hitters`

```{r}
#| fig-width: 18
#| fig-height: 8.5
#| fig-align: center
library(ggcorrplot)
corr <- cor(subset(Hitters_train, select = -c(logSalary, Division, League, NewLeague))) # Remove logSalary
ggcorrplot(corr,
  hc.order = TRUE,
  outline.col = "white",
  ggtheme = ggplot2::theme_bw,
  colors = c("#fc7d0b", "white", "#1170aa")
)
```

## A linear model

## Best subset selection

```{r}
#| fig-width: 12
#| fig-height: 6
#| fig-align: center
library(leaps)
fit.bests <- regsubsets(logSalary ~ ., data = Hitters_train, nvmax = ncol(Hitters_train))
summary.bests <- summary(fit.bests)

par(mfrow = c(1, 2))
plot(summary.bests$cp, xlab = "Number of covariates", ylab = "Mallow's Cp", type = "b", pch = 16)
plot(fit.bests, scale = "Cp")
```

## The selected linear model

```{r}
library(broom)
m_linear <- lm(logSalary ~ Hits + Walks + Years + CRuns + CWalks + League + Division + Errors, data = Hitters_train)
knitr::kable(tidy(summary(m_linear)), digits = 3)
```


## Scatterplot with `loess` estimate

```{r}
#| fig-width: 7.8
#| fig-height: 4
#| fig-align: center
#| message: false
ggplot(data = Hitters_train, aes(x = Years, y = logSalary)) +
  geom_point(size = 0.7) +
  geom_smooth(se = FALSE, span = 1, col = "#1170aa") +
  theme_minimal() +
  xlab("Number of years in the major leagues (Years)") +
  ylab("log(Salary)")
```

## Comments and cricism to linear models

# Generalized additive models (GAM)

## The ANOVA decomposition of a function

## Generalized additive models (GAM)

## The backfitting algorithm I

## The backfitting algorithm II

## Local scoring for additive logistic regression

## GAM using penalized splines

## GAM using penalized splines

## Additive models

```{r}
library(mgcv)
m_gam <- gam(logSalary ~ s(AtBat) + s(Hits) + s(HmRun) + s(Runs) + s(RBI) + s(Walks) + s(Years) + s(CAtBat) + s(CHits) + s(CHmRun) + s(CRuns) + s(CRBI) + s(CWalks) + League + Division + s(PutOuts) + s(Assists) + s(Errors) + NewLeague, data = Hitters_train, select = FALSE)
```


```{r}
summary(m_gam)
```

## Variable selection

```{r}
m_gam_selected <- gam(logSalary ~ s(AtBat) + s(Hits) + s(HmRun) + s(Runs) + s(RBI) + s(Walks) + s(Years) + s(CAtBat) + s(CHits) + s(CHmRun) + s(CRuns) + s(CRBI) + s(CWalks) + League + Division + s(PutOuts) + s(Assists) + s(Errors) + NewLeague,
  data = Hitters_train, select = FALSE
)

summary(m_gam_selected)
```

## Partial effect (`Years`)

```{r}
#| fig-width: 7.8
#| fig-height: 4
#| fig-align: center
#| message: false
library(gratia)
data_plot <- smooth_estimates(m_gam_selected, smooth = "s(Years)")

ggplot(data = data_plot, aes(x = Years, y = est)) +
  geom_line(linewidth = 1, col = "#1170aa") +
  geom_point(data = add_partial_residuals(m_gam_selected, data = Hitters_train), aes(x = Years, y = `s(Years)`), size = 0.7) +
  theme_minimal() +
  scale_color_tableau(palette = "Color Blind") +
  xlab("Number of years in the major leagues (Years)") +
  ylab("Partial effect")
```

##

```{r}
#| fig-width: 7.8
#| fig-height: 4
#| fig-align: center
#| message: false
data_plot <- smooth_estimates(m_gam_selected, smooth = "s(CHits)")

ggplot(data = data_plot, aes(x = CHits, y = est)) +
  geom_line(linewidth = 1, col = "#1170aa") +
  geom_point(data = add_partial_residuals(m_gam_selected, data = Hitters_train), aes(x = CHits, y = `s(CHits)`), size = 0.7) +
  theme_minimal() +
  scale_color_tableau(palette = "Color Blind") +
  xlab("Number of years in the major leagues (Years)") +
  ylab("Partial effect")
```


## Pros and cons of generalized additive models (GAMs)

::: callout-tip
#### Pros

-   asd
:::

. . .

::: callout-warning
#### Cons

- asd
:::


# MARS

## MARS

## 

```{r}
library(earth)
fit_earth <- earth(logSalary ~ ., data = Hitters_train, degree = 1)
summary(fit_earth, style = "pmax")
plot(evimp(fit_earth))
```


```{r}
fit_earth <- earth(logSalary ~ ., data = Hitters_train, degree = 2)
summary(fit_earth, style = "pmax")
plot(evimp(fit_earth))
plotmo(fit_earth)
```

```{r}
library(pdp)
earth_partial <- partial(fit_earth, pred.var = c("Years", "CHits"), grid.resolution = 40)
autoplot(earth_partial) + theme_light()
```

## The `Hitters` dataset

```{r}
library(pdp)
gam_partial <- partial(m_gam_selected, pred.var = c("Years", "CHits"), grid.resolution = 40)
autoplot(gam_partial) + theme_light()
```



## References

- 
