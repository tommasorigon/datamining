---
title: "A-B-C"
subtitle: "Data mining - CdL CLAMSES"
author: "[Tommaso Rigon]{.orange}"
institute: "_Universit√† degli Studi di Milano-Bicocca_"
execute:
  cache: false
format:
  revealjs:
    auto-stretch: false
    html-math-method: katex
    transition: slide
    output-file: un_A1_slides.html
    slide-number: true
    callout-appearance: minimal
    code-line-numbers: true
    theme: [default, template.css] # alternative themes (subset): default, night, dark
    embed-resources: false
    echo: false
    fig-dpi: 300
    # incremental: true  # Remove comment if you like incremental bullet points
    logo: img/logoB.png
    footer: "[Home page](https://tommasorigon.github.io/datamining)"
  html:
    html-math-method: katex
    echo: false
    callout-appearance: minimal
    theme: [cosmo, template.css]
    toc: true
    toc-title: Table of contents
    embed-resources: false
    code-line-numbers: true
    smooth-scroll: true
    code-fold: true
    code-summary: "Show the code"
    fig-dpi: 300
editor: 
  markdown: 
    wrap: 72
editor_options: 
  chunk_output_type: console
---

## About this unit

- In this unit we will cover three important [topics]{.orange}:
  - Linear models and modelling process
  - Computational aspects
  - Generalized linear models (GLMs)

- The [computational aspects]{.blue} of linear models will be novel to most of you...

. . .

- ... but you should be [very familiar]{.orange} with linear models and GLMs! 

- If do not remember much about them, use this first week of lectures to catch up (or study) from the material of previous courses. 

- A [short introduction]{.blue} to the topic is also offered in Azzalini & Scarpa (2011), Chapter 2.

# Old friends: linear models

## Car data

-   We consider data for $n = 203$ models of cars in circulation in 1985
    in the USA.
-   We want to identify a relationship that allows to [predict]{.blue} the distance covered per unit of fuel, as a function of the vehicle characteristics.
- We consider the following [continuous variables]{.orange}: 
  - The city distance per unit of fuel (km/L, `city.distance`)
  - The engine size (L, `engine.size`)
  - The number of cylinders (`n.cylinders`)
  - The curb weight (kg, `curb.weight`). 
- We also considered the [categorical variable]{.orange} fuel type (gasoline or diesel, `fuel`).

## Car data ([diesel]{.blue} or [gas]{.orange})

```{r, message=FALSE}
library(tidyverse)
library(ggplot2)
library(GGally)
library(ggthemes)

auto <- read.table("../data/auto.txt", header = TRUE) %>% select(city.distance, engine.size, n.cylinders, curb.weight, fuel)

p0 <- ggpairs(auto,
  columns = 1:4, aes(colour = fuel),
  lower = list(continuous = wrap("points", size = 0.9)),
  upper = list(continuous = wrap("points", size = 0.9)),
  diag = "blank"
) +
  theme_light() +
  scale_color_tableau(palette = "Color Blind") +
  xlab("") +
  ylab("")
p0
```

## Linear regression

- At the moment, let us focus on `city.distance` ($y$), `engine.size` ($x$) and `fuel` ($z$).

- The simplest model we can come up with is a [linear regression]{.orange} line:
$$
y = \beta_0 + \beta_1 x + \epsilon,
$$
where $\epsilon$ is a non-observable "error" term, having zero mean and variance $\sigma^2$.

. . .

- We are looking for an estimate for the [unknown regression parameters]{.blue} $\beta_0$ and $\beta_1$.

- Such an estimate could be obtained by ordinary least squares (OLS)...

. . .

- ... but the next plot clearly suggests that the relationship between `city.distance` and `engine.size` is [not]{.orange} well approximated by a [linear]{.orange} function.

## Scatterplot of the data

```{r}
ggplot(data = auto, aes(x = engine.size, y = city.distance, col = fuel)) + geom_point()+
  theme_light() +
  scale_color_tableau(palette = "Color Blind") +
  xlab("Engine size (L)") +
  ylab("Urban distance (km/L)")
```

## Regression models

- A more [general formulation]{.orange} for modeling the relationship between a vector of covariates $\bm{x} = (x_1,\dots,x_p)^T \in \mathbb{R}^p$ and a response $y \in \mathbb{R}$ is
$$
y = f(\bm{x}; \beta) + \epsilon.
$$

. . .

- To estimate the unknown parameters $\beta$, a possibility is to rely on [least squares criterion]{.blue}: we seek the [minimum]{.orange} of the objective function
$$
D(\beta) = \sum_{i=1}^n\{y_i - f(\bm{x}_i; \beta)\}^2,
$$
using $n$ pairs of observations, denoted by $(\bm{x}_i, y_i)$, for $i = 1,\dots,n$. The solution to this minimization problem is denoted with $\hat{\beta}$.

. . .

- The [predicted values]{.blue} $\hat{y}_i$ are then obtained as $\hat{y}_i = f(\bm{x}_i; \hat{\beta})$, for $i=1,\dots,n.$

## Linear models

- There are several directions to model `city.distance` ($y$), `engine.size` ($x$) and `fuel` ($z$) in a more flexible way. 

- For instance, we could consider a [polynomial term]{.orange} combined with a [dummy variable]{.blue}
$$
f(\bm{x}; \beta) = \beta_0 + \beta_1 x + \beta_2 x^2 + \beta_3 x^3 + \beta_4 I(z = \texttt{diesel}).
$$
- The above proposal is special instance of [linear model]{.blue}, in which
$$
f(\bm{x}; \beta) = \beta_0  + \beta_2 x_2 + \cdots + \beta_p x_{p-1} = \bm{x}_i^T\beta,
$$
where $\bm{x} = (1, x_1, \dots,x_{p-1})^T$ and $\beta = (\beta_0,\dots,\beta_{p-1})^T$ is the vector of [coefficients]{.orange} of the model.

. . .

- [Remark]{.orange}. A linear model is linear in the parameters, but it can capture non-linear behaviour!

## Matrix notation

- It is often convenient to express this problem using the matrix notation

- where in the last expression we are using matrix notation, so that
  - The vector $\bm{y} = (y_1,\dots,y_n)^T$
  - The vector $f(\bm{x}; \beta) = (f(x_1,\beta), \dots, f(x_n; \beta))^T$
  - The symbol $||\cdot||$ represents the Euclidean norm
- The 

## Linear regression: estimation

## Linear regression: estimation

# Computational aspects

# Generalized linear models